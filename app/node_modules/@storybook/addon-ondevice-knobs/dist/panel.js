"use strict";

require("core-js/modules/es.symbol");

require("core-js/modules/es.symbol.description");

require("core-js/modules/es.symbol.iterator");

require("core-js/modules/es.array.filter");

require("core-js/modules/es.array.for-each");

require("core-js/modules/es.array.iterator");

require("core-js/modules/es.array.map");

require("core-js/modules/es.date.to-string");

require("core-js/modules/es.function.bind");

require("core-js/modules/es.function.name");

require("core-js/modules/es.object.assign");

require("core-js/modules/es.object.create");

require("core-js/modules/es.object.define-property");

require("core-js/modules/es.object.get-prototype-of");

require("core-js/modules/es.object.keys");

require("core-js/modules/es.object.set-prototype-of");

require("core-js/modules/es.object.to-string");

require("core-js/modules/es.parse-float");

require("core-js/modules/es.string.iterator");

require("core-js/modules/web.dom-collections.for-each");

require("core-js/modules/web.dom-collections.iterator");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _native = _interopRequireDefault(require("@emotion/native"));

var _react = _interopRequireDefault(require("react"));

var _reactNative = require("react-native");

var _propTypes = _interopRequireDefault(require("prop-types"));

var _coreEvents = require("@storybook/core-events");

var _addonKnobs = require("@storybook/addon-knobs");

var _GroupTabs = _interopRequireDefault(require("./GroupTabs"));

var _PropForm = _interopRequireDefault(require("./PropForm"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var getTimestamp = function getTimestamp() {
  return +new Date();
};

var DEFAULT_GROUP_ID = 'Other';

var Touchable =
/*#__PURE__*/
_native["default"].TouchableOpacity(function (_ref) {
  var theme = _ref.theme;
  return {
    borderRadius: 2,
    borderWidth: 1,
    borderColor: theme.borderColor,
    padding: 4,
    margin: 10,
    justifyContent: 'center',
    alignItems: 'center'
  };
}, process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9wYW5lbC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFha0IiLCJmaWxlIjoiLi4vc3JjL3BhbmVsLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IFZpZXcsIFRleHQgfSBmcm9tICdyZWFjdC1uYXRpdmUnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCB7IFNFTEVDVF9TVE9SWSwgRk9SQ0VfUkVfUkVOREVSIH0gZnJvbSAnQHN0b3J5Ym9vay9jb3JlLWV2ZW50cyc7XG5pbXBvcnQgeyBTRVQsIFNFVF9PUFRJT05TLCBSRVNFVCwgQ0hBTkdFLCBDTElDSyB9IGZyb20gJ0BzdG9yeWJvb2svYWRkb24ta25vYnMnO1xuaW1wb3J0IHN0eWxlZCBmcm9tICdAZW1vdGlvbi9uYXRpdmUnO1xuaW1wb3J0IEdyb3VwVGFicyBmcm9tICcuL0dyb3VwVGFicyc7XG5pbXBvcnQgUHJvcEZvcm0gZnJvbSAnLi9Qcm9wRm9ybSc7XG5cbmNvbnN0IGdldFRpbWVzdGFtcCA9ICgpID0+ICtuZXcgRGF0ZSgpO1xuXG5jb25zdCBERUZBVUxUX0dST1VQX0lEID0gJ090aGVyJztcblxuY29uc3QgVG91Y2hhYmxlID0gc3R5bGVkLlRvdWNoYWJsZU9wYWNpdHkoKHsgdGhlbWUgfSkgPT4gKHtcbiAgYm9yZGVyUmFkaXVzOiAyLFxuICBib3JkZXJXaWR0aDogMSxcbiAgYm9yZGVyQ29sb3I6IHRoZW1lLmJvcmRlckNvbG9yLFxuICBwYWRkaW5nOiA0LFxuICBtYXJnaW46IDEwLFxuICBqdXN0aWZ5Q29udGVudDogJ2NlbnRlcicsXG4gIGFsaWduSXRlbXM6ICdjZW50ZXInLFxufSkpO1xuXG5jb25zdCBSZXNldEJ1dHRvbiA9IHN0eWxlZC5UZXh0KCh7IHRoZW1lIH0pID0+ICh7XG4gIGNvbG9yOiB0aGVtZS5idXR0b25UZXh0Q29sb3IsXG59KSk7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBhbmVsIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICBzdXBlcihwcm9wcyk7XG4gICAgdGhpcy5oYW5kbGVDaGFuZ2UgPSB0aGlzLmhhbmRsZUNoYW5nZS5iaW5kKHRoaXMpO1xuICAgIHRoaXMuaGFuZGxlQ2xpY2sgPSB0aGlzLmhhbmRsZUNsaWNrLmJpbmQodGhpcyk7XG4gICAgdGhpcy5zZXRLbm9icyA9IHRoaXMuc2V0S25vYnMuYmluZCh0aGlzKTtcbiAgICB0aGlzLnJlc2V0ID0gdGhpcy5yZXNldC5iaW5kKHRoaXMpO1xuICAgIHRoaXMuc2V0T3B0aW9ucyA9IHRoaXMuc2V0T3B0aW9ucy5iaW5kKHRoaXMpO1xuICAgIHRoaXMub25Hcm91cFNlbGVjdCA9IHRoaXMub25Hcm91cFNlbGVjdC5iaW5kKHRoaXMpO1xuXG4gICAgdGhpcy5zdGF0ZSA9IHsga25vYnM6IHt9LCBncm91cElkOiBERUZBVUxUX0dST1VQX0lEIH07XG4gICAgdGhpcy5vcHRpb25zID0ge307XG5cbiAgICB0aGlzLmxhc3RFZGl0ID0gZ2V0VGltZXN0YW1wKCk7XG4gICAgdGhpcy5sb2FkZWRGcm9tVXJsID0gZmFsc2U7XG4gIH1cblxuICBjb21wb25lbnREaWRNb3VudCgpIHtcbiAgICBjb25zdCB7IGNoYW5uZWwgfSA9IHRoaXMucHJvcHM7XG5cbiAgICBjaGFubmVsLm9uKFNFVCwgdGhpcy5zZXRLbm9icyk7XG4gICAgY2hhbm5lbC5vbihTRVRfT1BUSU9OUywgdGhpcy5zZXRPcHRpb25zKTtcbiAgICBjaGFubmVsLm9uKFNFTEVDVF9TVE9SWSwgdGhpcy5yZXNldCk7XG4gICAgY2hhbm5lbC5lbWl0KEZPUkNFX1JFX1JFTkRFUik7XG4gIH1cblxuICBjb21wb25lbnRXaWxsVW5tb3VudCgpIHtcbiAgICBjb25zdCB7IGNoYW5uZWwgfSA9IHRoaXMucHJvcHM7XG4gICAgY2hhbm5lbC5yZW1vdmVMaXN0ZW5lcihTRVQsIHRoaXMuc2V0S25vYnMpO1xuICAgIGNoYW5uZWwucmVtb3ZlTGlzdGVuZXIoU0VMRUNUX1NUT1JZLCB0aGlzLnJlc2V0KTtcbiAgfVxuXG4gIG9uR3JvdXBTZWxlY3QobmFtZSkge1xuICAgIHRoaXMuc2V0U3RhdGUoeyBncm91cElkOiBuYW1lIH0pO1xuICB9XG5cbiAgc2V0T3B0aW9ucyhvcHRpb25zID0geyB0aW1lc3RhbXBzOiBmYWxzZSB9KSB7XG4gICAgdGhpcy5vcHRpb25zID0gb3B0aW9ucztcbiAgfVxuXG4gIHNldEtub2JzKHsga25vYnMsIHRpbWVzdGFtcCB9KSB7XG4gICAgaWYgKCF0aGlzLm9wdGlvbnMudGltZXN0YW1wcyB8fCAhdGltZXN0YW1wIHx8IHRoaXMubGFzdEVkaXQgPD0gdGltZXN0YW1wKSB7XG4gICAgICB0aGlzLnNldFN0YXRlKHsga25vYnMgfSk7XG4gICAgfVxuICB9XG5cbiAgcmVzZXQgPSAoKSA9PiB7XG4gICAgY29uc3QgeyBjaGFubmVsIH0gPSB0aGlzLnByb3BzO1xuICAgIHRoaXMuc2V0U3RhdGUoeyBrbm9iczoge30gfSk7XG4gICAgY2hhbm5lbC5lbWl0KFJFU0VUKTtcbiAgfTtcblxuICBlbWl0Q2hhbmdlKGNoYW5nZWRLbm9iKSB7XG4gICAgY29uc3QgeyBjaGFubmVsIH0gPSB0aGlzLnByb3BzO1xuICAgIGNoYW5uZWwuZW1pdChDSEFOR0UsIGNoYW5nZWRLbm9iKTtcbiAgfVxuXG4gIGhhbmRsZUNoYW5nZShjaGFuZ2VkS25vYikge1xuICAgIHRoaXMubGFzdEVkaXQgPSBnZXRUaW1lc3RhbXAoKTtcbiAgICBjb25zdCB7IGtub2JzIH0gPSB0aGlzLnN0YXRlO1xuICAgIGNvbnN0IHsgbmFtZSB9ID0gY2hhbmdlZEtub2I7XG4gICAgY29uc3QgbmV3S25vYnMgPSB7IC4uLmtub2JzIH07XG4gICAgbmV3S25vYnNbbmFtZV0gPSB7XG4gICAgICAuLi5uZXdLbm9ic1tuYW1lXSxcbiAgICAgIC4uLmNoYW5nZWRLbm9iLFxuICAgIH07XG5cbiAgICB0aGlzLnNldFN0YXRlKHsga25vYnM6IG5ld0tub2JzIH0pO1xuXG4gICAgdGhpcy5zZXRTdGF0ZShcbiAgICAgIHsga25vYnM6IG5ld0tub2JzIH0sXG4gICAgICB0aGlzLmVtaXRDaGFuZ2UoXG4gICAgICAgIGNoYW5nZWRLbm9iLnR5cGUgPT09ICdudW1iZXInXG4gICAgICAgICAgPyB7IC4uLmNoYW5nZWRLbm9iLCB2YWx1ZTogcGFyc2VGbG9hdChjaGFuZ2VkS25vYi52YWx1ZSkgfVxuICAgICAgICAgIDogY2hhbmdlZEtub2JcbiAgICAgIClcbiAgICApO1xuICB9XG5cbiAgaGFuZGxlQ2xpY2soa25vYikge1xuICAgIGNvbnN0IHsgY2hhbm5lbCB9ID0gdGhpcy5wcm9wcztcblxuICAgIGNoYW5uZWwuZW1pdChDTElDSywga25vYik7XG4gIH1cblxuICByZW5kZXIoKSB7XG4gICAgY29uc3QgeyBhY3RpdmUgfSA9IHRoaXMucHJvcHM7XG5cbiAgICBpZiAoIWFjdGl2ZSkge1xuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuXG4gICAgY29uc3QgeyBrbm9icywgZ3JvdXBJZDogc3RhdGVHcm91cElkIH0gPSB0aGlzLnN0YXRlO1xuXG4gICAgY29uc3QgZ3JvdXBzID0ge307XG4gICAgY29uc3QgZ3JvdXBJZHMgPSBbXTtcblxuICAgIGxldCBrbm9ic0FycmF5ID0gT2JqZWN0LmtleXMoa25vYnMpO1xuXG4gICAgY29uc3Qga25vYnNXaXRoR3JvdXBzID0ga25vYnNBcnJheS5maWx0ZXIoKGtleSkgPT4ga25vYnNba2V5XS5ncm91cElkKTtcblxuICAgIGtub2JzV2l0aEdyb3Vwcy5mb3JFYWNoKChrZXkpID0+IHtcbiAgICAgIGNvbnN0IGtub2JLZXlHcm91cElkID0ga25vYnNba2V5XS5ncm91cElkO1xuICAgICAgZ3JvdXBJZHMucHVzaChrbm9iS2V5R3JvdXBJZCk7XG4gICAgICBncm91cHNba25vYktleUdyb3VwSWRdID0ge1xuICAgICAgICByZW5kZXI6ICgpID0+IDxUZXh0IGlkPXtrbm9iS2V5R3JvdXBJZH0+e2tub2JLZXlHcm91cElkfTwvVGV4dD4sXG4gICAgICAgIHRpdGxlOiBrbm9iS2V5R3JvdXBJZCxcbiAgICAgIH07XG4gICAgfSk7XG5cbiAgICBjb25zdCBhbGxIYXZlR3JvdXBzID0gZ3JvdXBJZHMubGVuZ3RoID4gMCAmJiBrbm9ic0FycmF5Lmxlbmd0aCA9PT0ga25vYnNXaXRoR3JvdXBzLmxlbmd0aDtcblxuICAgIC8vIElmIGFsbCBvZiB0aGUga25vYnMgYXJlIGFzc2lnbmVkIHRvIGEgZ3JvdXAsIHdlIGRvbid0IG5lZWQgdGhlIGRlZmF1bHQgZ3JvdXAuXG4gICAgY29uc3QgZ3JvdXBJZCA9XG4gICAgICBzdGF0ZUdyb3VwSWQgPT09IERFRkFVTFRfR1JPVVBfSUQgJiYgYWxsSGF2ZUdyb3Vwc1xuICAgICAgICA/IGtub2JzW2tub2JzV2l0aEdyb3Vwc1swXV0uZ3JvdXBJZFxuICAgICAgICA6IHN0YXRlR3JvdXBJZDtcblxuICAgIGlmIChncm91cElkcy5sZW5ndGggPiAwKSB7XG4gICAgICBpZiAoIWFsbEhhdmVHcm91cHMpIHtcbiAgICAgICAgZ3JvdXBzW0RFRkFVTFRfR1JPVVBfSURdID0ge1xuICAgICAgICAgIHJlbmRlcjogKCkgPT4gPFRleHQgaWQ9e0RFRkFVTFRfR1JPVVBfSUR9PntERUZBVUxUX0dST1VQX0lEfTwvVGV4dD4sXG4gICAgICAgICAgdGl0bGU6IERFRkFVTFRfR1JPVVBfSUQsXG4gICAgICAgIH07XG4gICAgICB9XG5cbiAgICAgIGlmIChncm91cElkID09PSBERUZBVUxUX0dST1VQX0lEKSB7XG4gICAgICAgIGtub2JzQXJyYXkgPSBrbm9ic0FycmF5LmZpbHRlcigoa2V5KSA9PiAha25vYnNba2V5XS5ncm91cElkKTtcbiAgICAgIH1cblxuICAgICAgaWYgKGdyb3VwSWQgIT09IERFRkFVTFRfR1JPVVBfSUQpIHtcbiAgICAgICAga25vYnNBcnJheSA9IGtub2JzQXJyYXkuZmlsdGVyKChrZXkpID0+IGtub2JzW2tleV0uZ3JvdXBJZCA9PT0gZ3JvdXBJZCk7XG4gICAgICB9XG4gICAgfVxuXG4gICAga25vYnNBcnJheSA9IGtub2JzQXJyYXkubWFwKChrZXkpID0+IGtub2JzW2tleV0pO1xuXG4gICAgaWYgKGtub2JzQXJyYXkubGVuZ3RoID09PSAwKSB7XG4gICAgICByZXR1cm4gPFRleHQ+Tk8gS05PQlM8L1RleHQ+O1xuICAgIH1cblxuICAgIHJldHVybiAoXG4gICAgICA8VmlldyBzdHlsZT17eyBmbGV4OiAxLCBwYWRkaW5nVG9wOiAxMCB9fT5cbiAgICAgICAge2dyb3VwSWRzLmxlbmd0aCA+IDAgJiYgKFxuICAgICAgICAgIDxHcm91cFRhYnMgZ3JvdXBzPXtncm91cHN9IG9uR3JvdXBTZWxlY3Q9e3RoaXMub25Hcm91cFNlbGVjdH0gc2VsZWN0ZWRHcm91cD17Z3JvdXBJZH0gLz5cbiAgICAgICAgKX1cbiAgICAgICAgPFZpZXc+XG4gICAgICAgICAgPFByb3BGb3JtXG4gICAgICAgICAgICBrbm9icz17a25vYnNBcnJheX1cbiAgICAgICAgICAgIG9uRmllbGRDaGFuZ2U9e3RoaXMuaGFuZGxlQ2hhbmdlfVxuICAgICAgICAgICAgb25GaWVsZENsaWNrPXt0aGlzLmhhbmRsZUNsaWNrfVxuICAgICAgICAgIC8+XG4gICAgICAgIDwvVmlldz5cbiAgICAgICAgPFRvdWNoYWJsZSBvblByZXNzPXt0aGlzLnJlc2V0fT5cbiAgICAgICAgICA8UmVzZXRCdXR0b24+UkVTRVQ8L1Jlc2V0QnV0dG9uPlxuICAgICAgICA8L1RvdWNoYWJsZT5cbiAgICAgIDwvVmlldz5cbiAgICApO1xuICB9XG59XG5cblBhbmVsLnByb3BUeXBlcyA9IHtcbiAgYWN0aXZlOiBQcm9wVHlwZXMuYm9vbC5pc1JlcXVpcmVkLFxuICBjaGFubmVsOiBQcm9wVHlwZXMuc2hhcGUoe1xuICAgIGVtaXQ6IFByb3BUeXBlcy5mdW5jLFxuICAgIG9uOiBQcm9wVHlwZXMuZnVuYyxcbiAgICByZW1vdmVMaXN0ZW5lcjogUHJvcFR5cGVzLmZ1bmMsXG4gIH0pLmlzUmVxdWlyZWQsXG4gIG9uUmVzZXQ6IFByb3BUeXBlcy5vYmplY3QsIC8vIGVzbGludC1kaXNhYmxlLWxpbmVcbn07XG4iXX0= */");

var ResetButton =
/*#__PURE__*/
_native["default"].Text(function (_ref2) {
  var theme = _ref2.theme;
  return {
    color: theme.buttonTextColor
  };
}, process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9wYW5lbC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUF1Qm9CIiwiZmlsZSI6Ii4uL3NyYy9wYW5lbC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBWaWV3LCBUZXh0IH0gZnJvbSAncmVhY3QtbmF0aXZlJztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgeyBTRUxFQ1RfU1RPUlksIEZPUkNFX1JFX1JFTkRFUiB9IGZyb20gJ0BzdG9yeWJvb2svY29yZS1ldmVudHMnO1xuaW1wb3J0IHsgU0VULCBTRVRfT1BUSU9OUywgUkVTRVQsIENIQU5HRSwgQ0xJQ0sgfSBmcm9tICdAc3Rvcnlib29rL2FkZG9uLWtub2JzJztcbmltcG9ydCBzdHlsZWQgZnJvbSAnQGVtb3Rpb24vbmF0aXZlJztcbmltcG9ydCBHcm91cFRhYnMgZnJvbSAnLi9Hcm91cFRhYnMnO1xuaW1wb3J0IFByb3BGb3JtIGZyb20gJy4vUHJvcEZvcm0nO1xuXG5jb25zdCBnZXRUaW1lc3RhbXAgPSAoKSA9PiArbmV3IERhdGUoKTtcblxuY29uc3QgREVGQVVMVF9HUk9VUF9JRCA9ICdPdGhlcic7XG5cbmNvbnN0IFRvdWNoYWJsZSA9IHN0eWxlZC5Ub3VjaGFibGVPcGFjaXR5KCh7IHRoZW1lIH0pID0+ICh7XG4gIGJvcmRlclJhZGl1czogMixcbiAgYm9yZGVyV2lkdGg6IDEsXG4gIGJvcmRlckNvbG9yOiB0aGVtZS5ib3JkZXJDb2xvcixcbiAgcGFkZGluZzogNCxcbiAgbWFyZ2luOiAxMCxcbiAganVzdGlmeUNvbnRlbnQ6ICdjZW50ZXInLFxuICBhbGlnbkl0ZW1zOiAnY2VudGVyJyxcbn0pKTtcblxuY29uc3QgUmVzZXRCdXR0b24gPSBzdHlsZWQuVGV4dCgoeyB0aGVtZSB9KSA9PiAoe1xuICBjb2xvcjogdGhlbWUuYnV0dG9uVGV4dENvbG9yLFxufSkpO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQYW5lbCBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgc3VwZXIocHJvcHMpO1xuICAgIHRoaXMuaGFuZGxlQ2hhbmdlID0gdGhpcy5oYW5kbGVDaGFuZ2UuYmluZCh0aGlzKTtcbiAgICB0aGlzLmhhbmRsZUNsaWNrID0gdGhpcy5oYW5kbGVDbGljay5iaW5kKHRoaXMpO1xuICAgIHRoaXMuc2V0S25vYnMgPSB0aGlzLnNldEtub2JzLmJpbmQodGhpcyk7XG4gICAgdGhpcy5yZXNldCA9IHRoaXMucmVzZXQuYmluZCh0aGlzKTtcbiAgICB0aGlzLnNldE9wdGlvbnMgPSB0aGlzLnNldE9wdGlvbnMuYmluZCh0aGlzKTtcbiAgICB0aGlzLm9uR3JvdXBTZWxlY3QgPSB0aGlzLm9uR3JvdXBTZWxlY3QuYmluZCh0aGlzKTtcblxuICAgIHRoaXMuc3RhdGUgPSB7IGtub2JzOiB7fSwgZ3JvdXBJZDogREVGQVVMVF9HUk9VUF9JRCB9O1xuICAgIHRoaXMub3B0aW9ucyA9IHt9O1xuXG4gICAgdGhpcy5sYXN0RWRpdCA9IGdldFRpbWVzdGFtcCgpO1xuICAgIHRoaXMubG9hZGVkRnJvbVVybCA9IGZhbHNlO1xuICB9XG5cbiAgY29tcG9uZW50RGlkTW91bnQoKSB7XG4gICAgY29uc3QgeyBjaGFubmVsIH0gPSB0aGlzLnByb3BzO1xuXG4gICAgY2hhbm5lbC5vbihTRVQsIHRoaXMuc2V0S25vYnMpO1xuICAgIGNoYW5uZWwub24oU0VUX09QVElPTlMsIHRoaXMuc2V0T3B0aW9ucyk7XG4gICAgY2hhbm5lbC5vbihTRUxFQ1RfU1RPUlksIHRoaXMucmVzZXQpO1xuICAgIGNoYW5uZWwuZW1pdChGT1JDRV9SRV9SRU5ERVIpO1xuICB9XG5cbiAgY29tcG9uZW50V2lsbFVubW91bnQoKSB7XG4gICAgY29uc3QgeyBjaGFubmVsIH0gPSB0aGlzLnByb3BzO1xuICAgIGNoYW5uZWwucmVtb3ZlTGlzdGVuZXIoU0VULCB0aGlzLnNldEtub2JzKTtcbiAgICBjaGFubmVsLnJlbW92ZUxpc3RlbmVyKFNFTEVDVF9TVE9SWSwgdGhpcy5yZXNldCk7XG4gIH1cblxuICBvbkdyb3VwU2VsZWN0KG5hbWUpIHtcbiAgICB0aGlzLnNldFN0YXRlKHsgZ3JvdXBJZDogbmFtZSB9KTtcbiAgfVxuXG4gIHNldE9wdGlvbnMob3B0aW9ucyA9IHsgdGltZXN0YW1wczogZmFsc2UgfSkge1xuICAgIHRoaXMub3B0aW9ucyA9IG9wdGlvbnM7XG4gIH1cblxuICBzZXRLbm9icyh7IGtub2JzLCB0aW1lc3RhbXAgfSkge1xuICAgIGlmICghdGhpcy5vcHRpb25zLnRpbWVzdGFtcHMgfHwgIXRpbWVzdGFtcCB8fCB0aGlzLmxhc3RFZGl0IDw9IHRpbWVzdGFtcCkge1xuICAgICAgdGhpcy5zZXRTdGF0ZSh7IGtub2JzIH0pO1xuICAgIH1cbiAgfVxuXG4gIHJlc2V0ID0gKCkgPT4ge1xuICAgIGNvbnN0IHsgY2hhbm5lbCB9ID0gdGhpcy5wcm9wcztcbiAgICB0aGlzLnNldFN0YXRlKHsga25vYnM6IHt9IH0pO1xuICAgIGNoYW5uZWwuZW1pdChSRVNFVCk7XG4gIH07XG5cbiAgZW1pdENoYW5nZShjaGFuZ2VkS25vYikge1xuICAgIGNvbnN0IHsgY2hhbm5lbCB9ID0gdGhpcy5wcm9wcztcbiAgICBjaGFubmVsLmVtaXQoQ0hBTkdFLCBjaGFuZ2VkS25vYik7XG4gIH1cblxuICBoYW5kbGVDaGFuZ2UoY2hhbmdlZEtub2IpIHtcbiAgICB0aGlzLmxhc3RFZGl0ID0gZ2V0VGltZXN0YW1wKCk7XG4gICAgY29uc3QgeyBrbm9icyB9ID0gdGhpcy5zdGF0ZTtcbiAgICBjb25zdCB7IG5hbWUgfSA9IGNoYW5nZWRLbm9iO1xuICAgIGNvbnN0IG5ld0tub2JzID0geyAuLi5rbm9icyB9O1xuICAgIG5ld0tub2JzW25hbWVdID0ge1xuICAgICAgLi4ubmV3S25vYnNbbmFtZV0sXG4gICAgICAuLi5jaGFuZ2VkS25vYixcbiAgICB9O1xuXG4gICAgdGhpcy5zZXRTdGF0ZSh7IGtub2JzOiBuZXdLbm9icyB9KTtcblxuICAgIHRoaXMuc2V0U3RhdGUoXG4gICAgICB7IGtub2JzOiBuZXdLbm9icyB9LFxuICAgICAgdGhpcy5lbWl0Q2hhbmdlKFxuICAgICAgICBjaGFuZ2VkS25vYi50eXBlID09PSAnbnVtYmVyJ1xuICAgICAgICAgID8geyAuLi5jaGFuZ2VkS25vYiwgdmFsdWU6IHBhcnNlRmxvYXQoY2hhbmdlZEtub2IudmFsdWUpIH1cbiAgICAgICAgICA6IGNoYW5nZWRLbm9iXG4gICAgICApXG4gICAgKTtcbiAgfVxuXG4gIGhhbmRsZUNsaWNrKGtub2IpIHtcbiAgICBjb25zdCB7IGNoYW5uZWwgfSA9IHRoaXMucHJvcHM7XG5cbiAgICBjaGFubmVsLmVtaXQoQ0xJQ0ssIGtub2IpO1xuICB9XG5cbiAgcmVuZGVyKCkge1xuICAgIGNvbnN0IHsgYWN0aXZlIH0gPSB0aGlzLnByb3BzO1xuXG4gICAgaWYgKCFhY3RpdmUpIHtcbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cblxuICAgIGNvbnN0IHsga25vYnMsIGdyb3VwSWQ6IHN0YXRlR3JvdXBJZCB9ID0gdGhpcy5zdGF0ZTtcblxuICAgIGNvbnN0IGdyb3VwcyA9IHt9O1xuICAgIGNvbnN0IGdyb3VwSWRzID0gW107XG5cbiAgICBsZXQga25vYnNBcnJheSA9IE9iamVjdC5rZXlzKGtub2JzKTtcblxuICAgIGNvbnN0IGtub2JzV2l0aEdyb3VwcyA9IGtub2JzQXJyYXkuZmlsdGVyKChrZXkpID0+IGtub2JzW2tleV0uZ3JvdXBJZCk7XG5cbiAgICBrbm9ic1dpdGhHcm91cHMuZm9yRWFjaCgoa2V5KSA9PiB7XG4gICAgICBjb25zdCBrbm9iS2V5R3JvdXBJZCA9IGtub2JzW2tleV0uZ3JvdXBJZDtcbiAgICAgIGdyb3VwSWRzLnB1c2goa25vYktleUdyb3VwSWQpO1xuICAgICAgZ3JvdXBzW2tub2JLZXlHcm91cElkXSA9IHtcbiAgICAgICAgcmVuZGVyOiAoKSA9PiA8VGV4dCBpZD17a25vYktleUdyb3VwSWR9Pntrbm9iS2V5R3JvdXBJZH08L1RleHQ+LFxuICAgICAgICB0aXRsZToga25vYktleUdyb3VwSWQsXG4gICAgICB9O1xuICAgIH0pO1xuXG4gICAgY29uc3QgYWxsSGF2ZUdyb3VwcyA9IGdyb3VwSWRzLmxlbmd0aCA+IDAgJiYga25vYnNBcnJheS5sZW5ndGggPT09IGtub2JzV2l0aEdyb3Vwcy5sZW5ndGg7XG5cbiAgICAvLyBJZiBhbGwgb2YgdGhlIGtub2JzIGFyZSBhc3NpZ25lZCB0byBhIGdyb3VwLCB3ZSBkb24ndCBuZWVkIHRoZSBkZWZhdWx0IGdyb3VwLlxuICAgIGNvbnN0IGdyb3VwSWQgPVxuICAgICAgc3RhdGVHcm91cElkID09PSBERUZBVUxUX0dST1VQX0lEICYmIGFsbEhhdmVHcm91cHNcbiAgICAgICAgPyBrbm9ic1trbm9ic1dpdGhHcm91cHNbMF1dLmdyb3VwSWRcbiAgICAgICAgOiBzdGF0ZUdyb3VwSWQ7XG5cbiAgICBpZiAoZ3JvdXBJZHMubGVuZ3RoID4gMCkge1xuICAgICAgaWYgKCFhbGxIYXZlR3JvdXBzKSB7XG4gICAgICAgIGdyb3Vwc1tERUZBVUxUX0dST1VQX0lEXSA9IHtcbiAgICAgICAgICByZW5kZXI6ICgpID0+IDxUZXh0IGlkPXtERUZBVUxUX0dST1VQX0lEfT57REVGQVVMVF9HUk9VUF9JRH08L1RleHQ+LFxuICAgICAgICAgIHRpdGxlOiBERUZBVUxUX0dST1VQX0lELFxuICAgICAgICB9O1xuICAgICAgfVxuXG4gICAgICBpZiAoZ3JvdXBJZCA9PT0gREVGQVVMVF9HUk9VUF9JRCkge1xuICAgICAgICBrbm9ic0FycmF5ID0ga25vYnNBcnJheS5maWx0ZXIoKGtleSkgPT4gIWtub2JzW2tleV0uZ3JvdXBJZCk7XG4gICAgICB9XG5cbiAgICAgIGlmIChncm91cElkICE9PSBERUZBVUxUX0dST1VQX0lEKSB7XG4gICAgICAgIGtub2JzQXJyYXkgPSBrbm9ic0FycmF5LmZpbHRlcigoa2V5KSA9PiBrbm9ic1trZXldLmdyb3VwSWQgPT09IGdyb3VwSWQpO1xuICAgICAgfVxuICAgIH1cblxuICAgIGtub2JzQXJyYXkgPSBrbm9ic0FycmF5Lm1hcCgoa2V5KSA9PiBrbm9ic1trZXldKTtcblxuICAgIGlmIChrbm9ic0FycmF5Lmxlbmd0aCA9PT0gMCkge1xuICAgICAgcmV0dXJuIDxUZXh0Pk5PIEtOT0JTPC9UZXh0PjtcbiAgICB9XG5cbiAgICByZXR1cm4gKFxuICAgICAgPFZpZXcgc3R5bGU9e3sgZmxleDogMSwgcGFkZGluZ1RvcDogMTAgfX0+XG4gICAgICAgIHtncm91cElkcy5sZW5ndGggPiAwICYmIChcbiAgICAgICAgICA8R3JvdXBUYWJzIGdyb3Vwcz17Z3JvdXBzfSBvbkdyb3VwU2VsZWN0PXt0aGlzLm9uR3JvdXBTZWxlY3R9IHNlbGVjdGVkR3JvdXA9e2dyb3VwSWR9IC8+XG4gICAgICAgICl9XG4gICAgICAgIDxWaWV3PlxuICAgICAgICAgIDxQcm9wRm9ybVxuICAgICAgICAgICAga25vYnM9e2tub2JzQXJyYXl9XG4gICAgICAgICAgICBvbkZpZWxkQ2hhbmdlPXt0aGlzLmhhbmRsZUNoYW5nZX1cbiAgICAgICAgICAgIG9uRmllbGRDbGljaz17dGhpcy5oYW5kbGVDbGlja31cbiAgICAgICAgICAvPlxuICAgICAgICA8L1ZpZXc+XG4gICAgICAgIDxUb3VjaGFibGUgb25QcmVzcz17dGhpcy5yZXNldH0+XG4gICAgICAgICAgPFJlc2V0QnV0dG9uPlJFU0VUPC9SZXNldEJ1dHRvbj5cbiAgICAgICAgPC9Ub3VjaGFibGU+XG4gICAgICA8L1ZpZXc+XG4gICAgKTtcbiAgfVxufVxuXG5QYW5lbC5wcm9wVHlwZXMgPSB7XG4gIGFjdGl2ZTogUHJvcFR5cGVzLmJvb2wuaXNSZXF1aXJlZCxcbiAgY2hhbm5lbDogUHJvcFR5cGVzLnNoYXBlKHtcbiAgICBlbWl0OiBQcm9wVHlwZXMuZnVuYyxcbiAgICBvbjogUHJvcFR5cGVzLmZ1bmMsXG4gICAgcmVtb3ZlTGlzdGVuZXI6IFByb3BUeXBlcy5mdW5jLFxuICB9KS5pc1JlcXVpcmVkLFxuICBvblJlc2V0OiBQcm9wVHlwZXMub2JqZWN0LCAvLyBlc2xpbnQtZGlzYWJsZS1saW5lXG59O1xuIl19 */");

var Panel =
/*#__PURE__*/
function (_React$Component) {
  _inherits(Panel, _React$Component);

  function Panel(props) {
    var _this;

    _classCallCheck(this, Panel);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(Panel).call(this, props));

    _this.reset = function () {
      var channel = _this.props.channel;

      _this.setState({
        knobs: {}
      });

      channel.emit(_addonKnobs.RESET);
    };

    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_this));
    _this.handleClick = _this.handleClick.bind(_assertThisInitialized(_this));
    _this.setKnobs = _this.setKnobs.bind(_assertThisInitialized(_this));
    _this.reset = _this.reset.bind(_assertThisInitialized(_this));
    _this.setOptions = _this.setOptions.bind(_assertThisInitialized(_this));
    _this.onGroupSelect = _this.onGroupSelect.bind(_assertThisInitialized(_this));
    _this.state = {
      knobs: {},
      groupId: DEFAULT_GROUP_ID
    };
    _this.options = {};
    _this.lastEdit = getTimestamp();
    _this.loadedFromUrl = false;
    return _this;
  }

  _createClass(Panel, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      var channel = this.props.channel;
      channel.on(_addonKnobs.SET, this.setKnobs);
      channel.on(_addonKnobs.SET_OPTIONS, this.setOptions);
      channel.on(_coreEvents.SELECT_STORY, this.reset);
      channel.emit(_coreEvents.FORCE_RE_RENDER);
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      var channel = this.props.channel;
      channel.removeListener(_addonKnobs.SET, this.setKnobs);
      channel.removeListener(_coreEvents.SELECT_STORY, this.reset);
    }
  }, {
    key: "onGroupSelect",
    value: function onGroupSelect(name) {
      this.setState({
        groupId: name
      });
    }
  }, {
    key: "setOptions",
    value: function setOptions() {
      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {
        timestamps: false
      };
      this.options = options;
    }
  }, {
    key: "setKnobs",
    value: function setKnobs(_ref3) {
      var knobs = _ref3.knobs,
          timestamp = _ref3.timestamp;

      if (!this.options.timestamps || !timestamp || this.lastEdit <= timestamp) {
        this.setState({
          knobs: knobs
        });
      }
    }
  }, {
    key: "emitChange",
    value: function emitChange(changedKnob) {
      var channel = this.props.channel;
      channel.emit(_addonKnobs.CHANGE, changedKnob);
    }
  }, {
    key: "handleChange",
    value: function handleChange(changedKnob) {
      this.lastEdit = getTimestamp();
      var knobs = this.state.knobs;
      var name = changedKnob.name;
      var newKnobs = Object.assign({}, knobs);
      newKnobs[name] = Object.assign({}, newKnobs[name], {}, changedKnob);
      this.setState({
        knobs: newKnobs
      });
      this.setState({
        knobs: newKnobs
      }, this.emitChange(changedKnob.type === 'number' ? Object.assign({}, changedKnob, {
        value: parseFloat(changedKnob.value)
      }) : changedKnob));
    }
  }, {
    key: "handleClick",
    value: function handleClick(knob) {
      var channel = this.props.channel;
      channel.emit(_addonKnobs.CLICK, knob);
    }
  }, {
    key: "render",
    value: function render() {
      var active = this.props.active;

      if (!active) {
        return null;
      }

      var _this$state = this.state,
          knobs = _this$state.knobs,
          stateGroupId = _this$state.groupId;
      var groups = {};
      var groupIds = [];
      var knobsArray = Object.keys(knobs);
      var knobsWithGroups = knobsArray.filter(function (key) {
        return knobs[key].groupId;
      });
      knobsWithGroups.forEach(function (key) {
        var knobKeyGroupId = knobs[key].groupId;
        groupIds.push(knobKeyGroupId);
        groups[knobKeyGroupId] = {
          render: function render() {
            return _react["default"].createElement(_reactNative.Text, {
              id: knobKeyGroupId
            }, knobKeyGroupId);
          },
          title: knobKeyGroupId
        };
      });
      var allHaveGroups = groupIds.length > 0 && knobsArray.length === knobsWithGroups.length; // If all of the knobs are assigned to a group, we don't need the default group.

      var groupId = stateGroupId === DEFAULT_GROUP_ID && allHaveGroups ? knobs[knobsWithGroups[0]].groupId : stateGroupId;

      if (groupIds.length > 0) {
        if (!allHaveGroups) {
          groups[DEFAULT_GROUP_ID] = {
            render: function render() {
              return _react["default"].createElement(_reactNative.Text, {
                id: DEFAULT_GROUP_ID
              }, DEFAULT_GROUP_ID);
            },
            title: DEFAULT_GROUP_ID
          };
        }

        if (groupId === DEFAULT_GROUP_ID) {
          knobsArray = knobsArray.filter(function (key) {
            return !knobs[key].groupId;
          });
        }

        if (groupId !== DEFAULT_GROUP_ID) {
          knobsArray = knobsArray.filter(function (key) {
            return knobs[key].groupId === groupId;
          });
        }
      }

      knobsArray = knobsArray.map(function (key) {
        return knobs[key];
      });

      if (knobsArray.length === 0) {
        return _react["default"].createElement(_reactNative.Text, null, "NO KNOBS");
      }

      return _react["default"].createElement(_reactNative.View, {
        style: {
          flex: 1,
          paddingTop: 10
        }
      }, groupIds.length > 0 && _react["default"].createElement(_GroupTabs["default"], {
        groups: groups,
        onGroupSelect: this.onGroupSelect,
        selectedGroup: groupId
      }), _react["default"].createElement(_reactNative.View, null, _react["default"].createElement(_PropForm["default"], {
        knobs: knobsArray,
        onFieldChange: this.handleChange,
        onFieldClick: this.handleClick
      })), _react["default"].createElement(Touchable, {
        onPress: this.reset
      }, _react["default"].createElement(ResetButton, null, "RESET")));
    }
  }]);

  return Panel;
}(_react["default"].Component);

exports["default"] = Panel;
Panel.propTypes = {
  active: _propTypes["default"].bool.isRequired,
  channel: _propTypes["default"].shape({
    emit: _propTypes["default"].func,
    on: _propTypes["default"].func,
    removeListener: _propTypes["default"].func
  }).isRequired,
  onReset: _propTypes["default"].object // eslint-disable-line

};